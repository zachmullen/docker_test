---
- hosts: all
  tasks:
    - name: MongoDB | Fetch GPG key
      command: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
      sudo: yes

    - name: MongoDB | Add 10 gen repository
      shell:
        echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/10gen.list creates=/etc/apt/sources.list.d/10gen.list
      sudo: yes

    - name: Fetch GPG key for docker package
      sudo: yes
      command: apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

    - name: Add docker PPA
      sudo: yes
      shell:
        echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main' | sudo tee /etc/apt/sources.list.d/docker.list creates=/etc/apt/sources.list.d/docker.list

    - name: add nodejs ppa
      shell: curl -sL https://deb.nodesource.com/setup_4.x | bash -
      sudo: yes

    - name: install system packages
      apt: update-cache=yes name={{ item }} state=present
      sudo: yes
      with_items:
        - curl
        - python-pycurl
        - python-pip
        - python2.7-dev
        - build-essential
        - mongodb-org-server
        - nodejs
        - python-software-properties
        - libffi-dev
        - cmake
        - cmake-curses-gui
        - git
        - rabbitmq-server
        - libssl-dev
        - docker-engine
        - libjpeg-dev
        - libfreetype6-dev
        - zlib1g-dev
        - libpng-dev

    - name: Create Docker group
      group: name=docker state=present
      sudo: yes

    - name: Add worker user to Docker group
      user: shell=/bin/bash
            name=vagrant
            groups=docker
            append=yes
      sudo: yes

    - name: Restart docker daemon
      service: name=docker state=restarted enabled=yes
      sudo: yes

    - name: get the most recent version of pip
      pip: name=pip extra_args="-U"
      sudo: yes

    - name: clone girder
      git:
        repo: git://github.com/girder/girder.git
        dest: /home/vagrant/girder
        accept_hostkey: yes
        version: master

    - name: pip editable install girder
      command: chdir=/home/vagrant/girder pip install -e .[worker]
      sudo: yes

    - name: install girder python client
      pip: name=girder-client version=1.2.0
      sudo: yes

    - name: clone girder worker
      git:
        repo: git://github.com/girder/girder_worker.git
        dest: /home/vagrant/girder_worker
        accept_hostkey: yes
        version: streaming-io

    - name: install girder_worker package
      command: chdir=/home/vagrant/girder_worker pip install -e .[docker]
      sudo: yes

    - name: enable plugins in the worker
      command: girder-worker-config set girder_worker plugins_enabled docker
      sudo: yes

    - name: install girder service script
      template: src=girder.conf.j2 dest=/etc/init/girder.conf mode=644 owner=root
      sudo: yes

    - name: install worker service script
      template: src=girder_worker.conf.j2 dest=/etc/init/girder_worker.conf mode=644 owner=root
      sudo: yes

    - name: install the docker_test plugin
      command: girder-install plugin -s /vagrant/docker_test
      sudo: yes

    - name: start the girder server
      service: name=girder state=restarted enabled=yes
      sudo: yes

    - name: wait for girder startup
      wait_for:
        port: 8080
        delay: 1

    - name: ensure girder admin user exists
      girder:
        port: 8080
        user:
          firstName: Admin
          lastName: User
          password: admin4girder
          login: admin
          email: admin@fakedomain.com
          admin: yes
        state: present

    - name: enable our plugin
      girder:
        port: 8080
        username: admin
        password: admin4girder
        plugins: ["docker_test"]
        state: present

    - name: Ensure the existence of the filesystem assetstore
      girder:
        port: 8080
        username: admin
        password: admin4girder
        assetstore:
          name: default
          type: filesystem
          root: /home/vagrant/girder_assetstore
          current: true
        state: present

    - name: restart girder service
      service: name=girder state=restarted enabled=yes
      sudo: yes

    - name: restart worker service
      service: name=girder_worker state=restarted enabled=yes
      sudo: yes

    - name: build docker image
      command: chdir=/vagrant docker build -t testoutputs:latest .
      sudo: yes
